plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
}

android {
    namespace 'com.alicloud.databox.opensdk'
    compileSdk 34

    defaultConfig {
        minSdk 21

        consumerProguardFiles "consumer-rules.pro"

        buildConfigField 'String', 'VERSION', '"' + localProperties.getProperty('sdk_version', "0.2.2") + '"'
        buildConfigField 'String', 'BASE_URL', '"' + localProperties.getProperty('app_url', "openapi.alipan.com") + '"'
    }

    buildFeatures {
        buildConfig = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }


    publishing {
        singleVariant("release") {
            withJavadocJar()
            withSourcesJar()
        }
    }

}

dependencies {

    implementation "com.squareup.okhttp3:okhttp:4.11.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.11.0"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'

    testImplementation 'junit:junit:4.13.2'
}

afterEvaluate {
    // 官方建议使用上传方法
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release
                groupId = 'com.alibaba'
                artifactId = 'aliyunpan'
                version = '0.0.1'
            }
        }
    }
}
